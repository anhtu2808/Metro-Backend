name: CI/CD Metro Backend

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PROD
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean package -DskipTests

    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push images
      run: |
        SERVICES="user-service payment-service ticket-service notification-service route-service content-service order-service scanner-service api-gateway"
        for SERVICE in $SERVICES; do
          docker build -t ${{ vars.DOCKER_USERNAME }}/$SERVICE:latest ./"$SERVICE"
          docker push ${{ vars.DOCKER_USERNAME }}/$SERVICE:latest
        done

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: PROD
    steps:
    - name: SSH to server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.HOST_IP }}
        username: root
        key: ${{ secrets.SECRET_KEY }}
        script: |
          cd /var/docker/metro-app
          echo "Deploying PROD environment..."
          docker-compose pull
          docker-compose down --remove-orphans || true
          docker rm -f $(docker ps -a -q --filter "name=metro") || true
          docker image prune -f
          docker-compose up -d
          docker rmi $(docker images -q --filter "dangling=true") || true
          docker ps
